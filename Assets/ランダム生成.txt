[x, z] [10, 10] ～ [990, 990]　[980, 980]


[70, 70] ごとに置く　-> 最大225か所置ける

生成する地面の上限を決めて地面を生成する
地面にvector3 のposition(x=random, y=0, z=random) を格納する
地面のtransform.positionのy座標を perlin noise で決定
https://docs.unity3d.com/ScriptReference/Mathf.PerlinNoise.html

ある2点を開始地点に設定する(ここが初期地点になる)  InitialPoint
一方はmster, もう一方はclientを与える playerType : Listにしてmaster,client両方を格納できるようにする

開始地点から一定範囲内で一番近い地面と連携する処理を開始する
(連携した地面の一方がギミッククリア状態になると双方を行き来できるようになる)

連携したらmaster or clientを地面の変数に与える

一定範囲内で一番近い地面がを選択する

選択した地面が既に自身と連携しているならそれの次に近い地面と連携を開始する
選択した地面のplayerType が自身のplayerType と同じなら次に近い地面と連携を開始する

一定範囲内にある地面が全て連携していたら処理を終了する

連携が可能なら連携する
連携した地面にplayerTypeを追加する

連携処理を完了したら、連携された側の地面が連携を開始する
(これを再帰的に実装する)
(async, await, UniTask を使う)


全体の連携処理が終了したら生成した地面の中で連携作業が1回もされなかった地面をリスト化する

リスト化した地面が連携処理を完了していたら次に進む(リスト内の地面同士が連携をする可能性があるため)
リスト化した地面に対して距離制限なしで一番近い地面と連携を開始する
連携対象に地面が一度でも連携処理を完了していたら処理を完了する

--------------------------------------------------------------------------------------------------


masterプレイヤーがゲームを開始した時点で処理を開始する
この処理が完了するまでプレイヤーの生成は待機する

プレイヤーの生成はInitialPointで行われる
InitialPoint かつ master の地面はmasterプレイヤーの初期リスになる
InitialPoint かつ client の地面はclientプレイヤーの初期リスになる